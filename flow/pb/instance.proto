syntax = "proto3";

package gs.service.flow;

import "google/protobuf/any.proto";
import "konekko.me/gosion/commons/dto/commons.proto";

service Instance {

    //我发起的所有实例（流程）
    rpc GetMyLaunchInstances (GetMyLaunchInstancesRequest) returns (GetMyLaunchInstancesResponse);

    //所有实例
    rpc GetAllInstances (GetAllInstancesRequest) returns (GetAllInstancesResponse);

    //停止
    rpc Stop (StopRequest) returns (StopResponse);

    //重新开始
    rpc Restart (RestartRequest) returns (RestartResponse);

    //继续执行
    rpc Continue (ContinueRequest) returns (ContinueResponse);

    rpc Submit (SubmitRequest) returns (SubmitResponse);
}

message SubmitRequest {
    string instanceId = 1;
    map<string, google.protobuf.Any> data = 2;
}

message SubmitResponse {
    gs.commons.dto.State state = 1;
}

message ContinueRequest {
    string instanceId = 1;
}

message ContinueResponse {
    gs.commons.dto.State state = 1;
}

message RestartRequest {
    string instanceId = 1;
}

message RestartResponse {
    gs.commons.dto.State state = 1;
}

message StopRequest {
    string instanceId = 1;
    string reason = 2;
}

message StopResponse {
    gs.commons.dto.State state = 1;
}

message GetAllInstancesRequest {
    int64 page = 1;
    int64 size = 2;
    int64 status = 3;
    string appId = 4;
}

message GetAllInstancesResponse {
    gs.commons.dto.State state = 1;
}

message GetMyLaunchInstancesRequest {
    int64 page = 1;
    int64 size = 2;
    int64 status = 3;
    string appId = 4;
}

message GetMyLaunchInstancesResponse {
    gs.commons.dto.State state = 1;
}