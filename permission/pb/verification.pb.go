// Code generated by protoc-gen-go. DO NOT EDIT.
// source: permission/pb/verification.proto

package gs_service_permission

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "konekko.me/gosion/commons/dto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HasPermissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasPermissionRequest) Reset()         { *m = HasPermissionRequest{} }
func (m *HasPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*HasPermissionRequest) ProtoMessage()    {}
func (*HasPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e59ca96348c63fe, []int{0}
}

func (m *HasPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasPermissionRequest.Unmarshal(m, b)
}
func (m *HasPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasPermissionRequest.Marshal(b, m, deterministic)
}
func (m *HasPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasPermissionRequest.Merge(m, src)
}
func (m *HasPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_HasPermissionRequest.Size(m)
}
func (m *HasPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasPermissionRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*HasPermissionRequest)(nil), "gs.service.permission.HasPermissionRequest")
}

func init() { proto.RegisterFile("permission/pb/verification.proto", fileDescriptor_8e59ca96348c63fe) }

var fileDescriptor_8e59ca96348c63fe = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xcd, 0xbd, 0x0a, 0xc2, 0x40,
	0x10, 0x04, 0xe0, 0x46, 0x2c, 0x0e, 0xab, 0xa0, 0x29, 0x52, 0x89, 0x6d, 0x60, 0x0f, 0xf4, 0x25,
	0x04, 0x1b, 0x51, 0xb0, 0xb1, 0xca, 0xcf, 0x1a, 0x96, 0xe3, 0x6e, 0xcf, 0xdb, 0x4d, 0x9e, 0x5f,
	0x8c, 0x44, 0x2d, 0xd2, 0x4d, 0x31, 0x33, 0x9f, 0xd9, 0x46, 0x4c, 0x9e, 0x44, 0x88, 0x83, 0x8d,
	0xb5, 0x1d, 0x30, 0xd1, 0x83, 0x9a, 0x4a, 0x89, 0x03, 0xc4, 0xc4, 0xca, 0xd9, 0xa6, 0x13, 0x10,
	0x4c, 0x03, 0x35, 0x08, 0xbf, 0x72, 0x51, 0x3a, 0x0e, 0xe8, 0x1c, 0x83, 0x47, 0xdb, 0xf1, 0xb8,
	0x6f, 0xd8, 0x7b, 0x0e, 0x62, 0x5b, 0xe5, 0x29, 0x7f, 0x3e, 0x76, 0xb9, 0x59, 0x1f, 0x2b, 0x39,
	0x7f, 0xd7, 0x17, 0x7c, 0xf6, 0x28, 0xba, 0xbf, 0x9b, 0xd5, 0xed, 0x4f, 0xcc, 0x4e, 0x66, 0xa1,
	0x28, 0x9a, 0x95, 0x30, 0x8b, 0xc2, 0xdc, 0x49, 0x91, 0xbf, 0xcb, 0x93, 0xd7, 0x2a, 0xc3, 0x55,
	0x2b, 0xed, 0xa5, 0x5e, 0x8e, 0xf6, 0xe1, 0x15, 0x00, 0x00, 0xff, 0xff, 0x50, 0x11, 0x16, 0x50,
	0xe3, 0x00, 0x00, 0x00,
}
